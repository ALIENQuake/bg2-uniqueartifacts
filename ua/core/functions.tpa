DEFINE_PATCH_FUNCTION define_items
  STR_VAR
    exclude_source = ~~
    items = ~~
  RET items
BEGIN
  TO_UPPER %exclude_source%
  SPRINT exclude_items $source_item(~%exclude_source%~)  //get items from primary source
  PHP_EACH source_item AS source => item BEGIN
    PATCH_IF NOT ( ~%source%~ STR_EQ ~%exclude_source%~) BEGIN  //always skip primary source
      PATCH_IF ( ~%item%~ STRING_MATCHES_REGEXP ~%exclude_items%~ AND     //always skip items from primary source (may appear in secondary sources)
                 ~%exclude_items%~ STRING_MATCHES_REGEXP ~%item%~) BEGIN  //this is a reverse condition. S_M_R returns 0 on match
               //There's still an uncovered possiblity when item and exclude_items are different regexp.
               //In that case, items may go missing
               //This doesn't happen with the current item selection, though
        PATCH_IF NOT ( STRING_LENGTH ~%items%~ == 0 ) BEGIN
          SPRINT items ~%items%\|%item%~ //add second and consecutive items
        END ELSE BEGIN
          SPRINT items ~%item%~  // add first item to the string
        END
      END
    END
  END
END

//Define items once
OUTER_PATCH 1 BEGIN
  LPF define_items RET all_items = items END
END
OUTER_SPRINT really_all_items ~%all_items%~

//Replace all actions which give the party "old_item" with a corresponding action and "new_item". "old_item" may be a regexp.
DEFINE_PATCH_FUNCTION REPLACE_D_AND_BAF_ITEM
  STR_VAR
    old_item = ~~
    new_item = ~~
BEGIN
  REPLACE_EVALUATE CASE_INSENSITIVE
    ~GiveItem("\(%old_item%\)"\(.*\))~
    BEGIN END
    ~GiveItem("%new_item%"%MATCH2%)~

  REPLACE_EVALUATE CASE_INSENSITIVE
    ~GiveItemCreate("\(%old_item%\)"\(.*\))~
    BEGIN END
    ~GiveItemCreate("%new_item%"%MATCH2%)~

  REPLACE_EVALUATE CASE_INSENSITIVE
    ~CreateItem("\(%old_item%\)"\(.*\))~
    BEGIN END
    ~CreateItem("%new_item%"%MATCH2%)~

  REPLACE_EVALUATE CASE_INSENSITIVE
    ~CreateItemGlobal("\(%old_item%\)"\(.*\))~
    BEGIN END
    ~CreateItemGlobal("%new_item%"%MATCH2%)~

  REPLACE_EVALUATE CASE_INSENSITIVE
    ~CreateItemNumGlobal("\(%old_item%\)"\(.*\))~
    BEGIN END
    ~CreateItemNumGlobal("%new_item%"%MATCH2%)~

  REPLACE_EVALUATE CASE_INSENSITIVE
    ~TakeItemReplace("\(%old_item%\)"\(.*\))~
    BEGIN END
    ~TakeItemReplace("%new_item%"%MATCH2%)~
END

DEFINE_ACTION_FUNCTION IS_ITEM_IN_RESOURCE
  STR_VAR
    item = ~~
    resource = ~~
  RET present
BEGIN
  OUTER_SET present = 0
  OUTER_PATCH_SAVE file_res ~%resource%~ BEGIN
    REPLACE_TEXTUALLY CASE_INSENSITIVE ~\.are$\|\.bcs$\|\.dlg$\|\.cre$\|\.sto$~ ~~
  END
  ACTION_IF ("%resource%" STRING_MATCHES_REGEXP ".*\.are$" = 0) BEGIN
    LAF IS_ITEM_IN_AREA
      STR_VAR item = ~%item%~ area = ~%file_res%~
      RET present
    END
  END
  ACTION_IF ("%resource%" STRING_MATCHES_REGEXP ".*\.cre$" = 0) BEGIN
    LAF IS_ITEM_ON_CREATURE
      STR_VAR item = ~%item%~ cre = ~%file_res%~
      RET present
    END
  END
  // ACTION_IF ("%resource%" STRING_MATCHES_REGEXP ".*\.sto$" = 0) BEGIN
  //   LAF IS_ITEM_IN_STORE
  //     STR_VAR item = ~%item%~ resource = ~%resource%~
  //     RET present = present
  //   END
  // END
  // ACTION_IF ("%resource%" STRING_MATCHES_REGEXP ".*\.sto$" = 0) BEGIN
  //   LAF IS_ITEM_IN_DIALOG_OR_SCRIPT
  //     STR_VAR item = ~%item%~ resource = ~%resource%~
  //     RET present = present
  //   END
  // END
  ACTION_IF present == 1 BEGIN
    PRINT ~item found: %item% in %resource%~
  END
END

DEFINE_ACTION_FUNCTION IS_ITEM_IN_AREA
  STR_VAR
    item = ~~
    area = ~~
  RET present
BEGIN
  COPY_EXISTING ~%area%.are~ ~override~
    present = 0
    GET_OFFSET_ARRAY cont_offs ARE_V10_CONTAINERS
    PHP_EACH cont_offs AS int => c_off BEGIN
      GET_OFFSET_ARRAY2 item_offs c_off ARE_V10_ITEMS
      PHP_EACH item_offs AS int => i_off BEGIN
        READ_ASCII i_off item_name
        PATCH_IF ~%item%~ STR_EQ ~%item_name%~ BEGIN
          present = 1
        END
      END
    END
  BUT_ONLY
END

DEFINE_ACTION_FUNCTION IS_ITEM_ON_CREATURE
  STR_VAR
    item = ~~
    cre = ~~
  RET present
BEGIN
  COPY_EXISTING ~%cre%.cre~ ~override~
    present = 0
    GET_OFFSET_ARRAY item_offs CRE_V10_ITEMS
    PHP_EACH item_offs AS int => i_off BEGIN
      READ_ASCII i_off item_name
      PATCH_IF ~%item%~ STR_EQ ~%item_name%~ BEGIN
        present = 1
      END
    END
  BUT_ONLY
END
